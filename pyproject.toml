[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mwaa-disaster-recovery"
dynamic = ["version"]
dependencies = [
    "aws-cdk-lib==2.138.0",
    "constructs==10.3.0",
    "boto3==1.34.88",
    "smart-open==7.0.4",
    "dataclasses_json==0.6.4",
    "python-dotenv==1.0.1",
]
requires-python = ">=3"
authors = [
  {name = "Chandan Rupakheti"},
  {name = "Parnab Basak"},
]
maintainers = [
  {name = "Chandan Rupakheti"}
]
description = "DR Solution for Amazon Managed Workflows for Apache Airflow (MWAA)"
readme = "README.md"
license = {file = "LICENSE.md"}
keywords = ["MWAA", "Apache Airflow", "Disaster Recovery", "DR"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python"
]

[project.urls]
Homepage = "https://github.com/aws-samples/mwaa-disaster-recovery"
Documentation = "https://github.com/aws-samples/mwaa-disaster-recovery/blob/main/README.md"
Repository = "https://github.com/aws-samples/mwaa-disaster-recovery.git"
"Bug Tracker" = "https://github.com/aws-samples/mwaa-disaster-recovery/issues"
Changelog = "https://github.com/aws-samples/mwaa-disaster-recovery/blob/main/CHANGELOG.md"

[tool.pytest.ini_options]
pythonpath = [
  ".",
  "lib",
  "assets/dags"
]
testpaths = [
  "tests"
]

[tool.coverage.run]
omit = [
  "tests/*"
]
include = [
  "lib/**/*.py",
  "assets/**/*.py",
  "./config.py",
]
branch = true
relative_files = true

[tool.coverage.report]
ignore_errors = true
exclude_also = [
  "raise AssertionError",
  "raise NotImplementedError",
  "@(abc\\.)?abstractmethod",
]
